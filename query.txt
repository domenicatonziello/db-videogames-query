1- Selezionare tutte le software house americane (3)
SELECT * 
FROM software_houses
WHERE country = 'United States'


2- Selezionare tutti i giocatori della cittÃ  di 'Rogahnland' (2)
SELECT * 
FROM players
WHERE city = 'Rogahnland'


3- Selezionare tutti i giocatori il cui nome finisce per "a" (220)
SELECT * 
FROM players
WHERE name  LIKE  '%a'


4- Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11)
SELECT * 
FROM reviews 
WHERE player_id = '800'


5- Contare quanti tornei ci sono stati nell'anno 2015 (9)
SELECT count(*)  
FROM tournaments 
WHERE `year`  = '2015'


6- Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2)
SELECT *  
FROM awards 
WHERE description  LIKE  '%facere%'


7- Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG), mostrandoli una sola volta (del videogioco vogliamo solo l'ID) (287)
SELECT videogame_id 
FROM category_videogame
WHERE category_id = '2' OR category_id = '6'
GROUP BY videogame_id 


8- Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947)
SELECT * 
FROM reviews
WHERE rating > 1 AND rating < 5


9- Selezionare tutti i dati dei videogiochi rilasciati nell'anno 2020 (46)
SELECT * 
FROM videogames 
WHERE release_date LIKE '2020-%'


10- Selezionare gli id dei videogame che hanno ricevuto almeno una recensione da 5 stelle, mostrandoli una sola volta (443)
SELECT videogame_id  
FROM reviews  
WHERE rating = 5
GROUP BY videogame_id 

***************BONUS*************
11- Selezionare il numero e la media delle recensioni per il videogioco con ID = 412 (review number = 12, avg_rating = 3.16 circa)
SELECT count(*), avg(rating)  
FROM reviews  
WHERE videogame_id  = 412

12- Selezionare il numero di videogame che la software house con ID = 1 ha rilasciato nel 2018 (13)
SELECT count(*)
FROM videogames
WHERE software_house_id = 1 AND release_date LIKE '2018-%'

***GROUP BY *****
1- Contare quante software house ci sono per ogni paese (3)
SELECT count(*)
FROM software_houses 
GROUP BY country 

2- Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l'ID) (500)
SELECT count(*), videogame_id 
FROM reviews 
GROUP BY videogame_id 


3- Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l'ID) (13)
SELECT count(*)  
FROM pegi_label_videogame  
GROUP BY pegi_label_id 

4- Mostrare il numero di videogiochi rilasciati ogni anno (11)
SELECT count(*)  
FROM videogames 
GROUP BY YEAR(release_date)

5- Contare quanti videogiochi sono disponbiili per ciascun device (del device vogliamo solo l'ID) (7)
SELECT count(*), device_id  
FROM device_videogame
GROUP BY device_id 

6- Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l'ID) (500)
SELECT videogame_id , avg(rating) as media_recensioni
FROM reviews
GROUP BY videogame_id 
ORDER BY media_recensioni DESC

*****JOIN*********************
1- Selezionare i dati di tutti giocatori che hanno scritto almeno una recensione, mostrandoli una sola volta (996)
SELECT players.*
FROM players  
JOIN reviews ON reviews.player_id  = players.id
GROUP BY player_id

2- Sezionare tutti i videogame dei tornei tenuti nel 2016, mostrandoli una sola volta (226)
SELECT videogames.*
FROM videogames
JOIN tournament_videogame ON tournament_videogame.videogame_id = videogames.id
JOIN tournaments ON tournament_videogame.tournament_id = tournaments.id 
WHERE tournaments.`year` = 2016
GROUP BY videogames.id

3- Mostrare le categorie di ogni videogioco (1718)
SELECT categories.*
FROM categories
JOIN category_videogame ON category_videogame.category_id = categories.id
JOIN videogames ON category_videogame.videogame_id = videogames.id 

4- Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6)
SELECT software_houses.*
FROM software_houses
JOIN videogames ON videogames.software_house_id = software_houses.id
WHERE videogames.release_date LIKE '2020-%'
GROUP BY software_houses.id

5- Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55)
SELECT awards.*
FROM awards
JOIN award_videogame ON award_videogame.award_id = awards.id 
JOIN videogames ON award_videogame.videogame_id = videogames.id 
JOIN software_houses ON videogames.software_house_id = software_houses.id 

6- Selezionare categorie e classificazioni PEGI dei videogiochi che hanno ricevuto recensioni da 4 e 5 stelle, mostrandole una sola volta (3363)
SELECT categories.* , pegi_labels.*
FROM reviews 
JOIN videogames ON reviews.videogame_id = videogames.id 
JOIN pegi_label_videogame ON pegi_label_videogame.videogame_id = videogames.id 
JOIN pegi_labels ON pegi_label_videogame.pegi_label_id = pegi_labels.id 
JOIN pegi_label_videogame ON pegi_labels.id = pegi_label_videogame.pegi_label_id 
JOIN videogames ON videogames.id = pegi_label_videogame.videogame_id 
JOIN category_videogame ON category_videogame.videogame_id = videogames.id 
JOIN categories ON category_videogame.category_id = categories.id 
WHERE reviews.rating BETWEEN 4 AND 5
GROUP BY categories.id AND pegi_labels.id 


7- Selezionare quali giochi erano presenti nei tornei nei quali hanno partecipato i giocatori il cui nome inizia per 'S' (474)
SELECT videogames.*
FROM videogames 
JOIN tournament_videogame ON tournament_videogame.videogame_id = videogames.id 
JOIN tournaments ON tournament_videogame.tournament_id = tournaments.id 
JOIN player_tournament ON player_tournament.tournament_id = tournaments.id 
JOIN players ON player_tournament.player_id = players.id 
WHERE players.name LIKE 'S%'
GROUP BY videogames.id 